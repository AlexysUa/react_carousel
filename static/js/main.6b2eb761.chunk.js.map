{"version":3,"sources":["components/Carousel.js","components/Form.js","App.js","index.js"],"names":["Carousel","getImageId","element","match","join","this","props","images","itemWidth","frameSize","animationDuration","translateX","prevButton","nextButton","className","style","width","map","image","key","transition","transform","src","alt","Button","type","onClick","variant","React","Component","MainForm","state","step","infinite","handleSubmit","event","counter","preventDefault","param","handleChange","target","name","value","checked","setState","onSubmit","htmlFor","id","placeholder","onChange","App","imagesWidth","paramFromInputs","nextSlide","length","prevState","prevSlide","ReactDOM","render","document","getElementById"],"mappings":"kTAKqBA,E,4MACnBC,WAAa,SAAAC,GAAO,OAAIA,EAAQC,MAAM,OAAOC,KAAK,K,uDAExC,IAAD,SASHC,KAAKC,MAPPC,EAFK,EAELA,OACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,UACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,WACAC,EARK,EAQLA,WAGF,OACE,oCACE,yBAAKC,UAAU,YACb,wBACEA,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKP,EAAYD,EAAjB,QAGND,EAAOU,KAAI,SAAAC,GAAK,OACf,wBACEC,IAAK,EAAKlB,WAAWiB,GACrBH,MAAO,CACLK,WAAW,aAAD,OAAeV,EAAf,WACVW,UAAU,cAAD,OAAgBV,EAAhB,SAGX,yBACEW,IAAKJ,EACLK,IAAI,IACJR,MAAO,CACLC,MAAM,GAAD,OAAKR,EAAL,cAMf,yBACEM,UAAU,cACVC,MAAO,CACLC,MAAM,GAAD,OAAKP,EAAYD,EAAjB,QAGP,kBAACgB,EAAA,EAAD,CACEC,KAAK,SACLC,QAASd,EACTe,QAAQ,WAHV,QAOA,kBAACH,EAAA,EAAD,CACEC,KAAK,SACLC,QAASb,EACTc,QAAQ,UAHV,e,GAtD0BC,IAAMC,W,8BCCvBC,E,4MACnBC,MAAQ,CACNtB,UAAW,EACXD,UAAW,IACXE,kBAAmB,IACnBsB,KAAM,EACNC,UAAU,G,EAGZC,aAAe,SAACC,GAAW,IAAD,EAOpB,EAAKJ,MALPtB,EAFsB,EAEtBA,UACAD,EAHsB,EAGtBA,UACAE,EAJsB,EAItBA,kBACAsB,EALsB,EAKtBA,KACAC,EANsB,EAMtBA,SAEIG,GAAW3B,EAEjB0B,EAAME,iBACN,EAAK/B,MAAMgC,MACT7B,EACAD,EACAE,EACAsB,EACAC,EACAG,I,EAIJG,aAAe,SAACJ,GAAW,IAAD,EACeA,EAAMK,OAArCC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAAOjB,EADG,EACHA,KAAMkB,EADH,EACGA,QAG3B,EAAKC,SAAL,eAAiBH,EAAgB,aAAThB,EACpBkB,EAAmB,SAATlB,EAAkBiB,GAASA,K,uDAGjC,IAAD,EAOHrC,KAAK0B,MALPtB,EAFK,EAELA,UACAD,EAHK,EAGLA,UACAE,EAJK,EAILA,kBACAsB,EALK,EAKLA,KACAC,EANK,EAMLA,SAGF,OACE,kBAAC,IAAD,CACEY,SAAUxC,KAAK6B,aACfpB,UAAU,YAEV,+CACA,2BAAOgC,QAAQ,aAAf,cACA,2BACEC,GAAG,YACHN,KAAK,YACLhB,KAAK,SACLuB,YAAY,YACZN,MAAOjC,EACPwC,SAAU5C,KAAKkC,eAEjB,2BAAOO,QAAQ,aAAf,cACA,2BACEC,GAAG,YACHN,KAAK,YACLhB,KAAK,SACLuB,YAAY,YACZN,MAAOlC,EACPyC,SAAU5C,KAAKkC,eAEjB,2BAAOO,QAAQ,qBAAf,sBACA,2BACEC,GAAG,oBACHN,KAAK,oBACLhB,KAAK,SACLuB,YAAY,oBACZN,MAAOhC,EACPuC,SAAU5C,KAAKkC,eAEjB,2BAAOO,QAAQ,QAAf,SACA,2BACEC,GAAG,OACHN,KAAK,OACLhB,KAAK,SACLuB,YAAY,OACZN,MAAOV,EACPiB,SAAU5C,KAAKkC,eAEjB,yBAAKzB,UAAU,iBACb,2BAAOgC,QAAQ,YAAf,aACA,2BACEC,GAAG,WACHN,KAAK,WACLhB,KAAK,WACLuB,YAAY,WACZN,MAAOT,EACPgB,SAAU5C,KAAKkC,gBAGnB,kBAACf,EAAA,EAAD,CACEC,KAAK,SACLE,QAAQ,WAFV,gB,GApG8BC,IAAMC,WCmH7BqB,E,4MAlHbnB,MAAQ,CACNxB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEF4C,YAAa,KACbnB,KAAM,EACNvB,UAAW,EACXD,UAAW,IACXE,kBAAmB,IACnBuB,UAAU,EACVG,QAAS,EACTzB,WAAY,G,EAGdyC,gBACI,SAAC3C,EAAWD,EAAWE,EAAmBsB,EAAMC,EAAUG,GAC1D,EAAKQ,UAAS,iBAAO,CACnBnC,YACAD,YACAE,oBACAsB,OACAC,WACAG,UACAzB,WAAY,O,EAIlB0C,UAAY,WAAO,IAAD,EACuC,EAAKtB,MAApDxB,EADQ,EACRA,OAAQ6B,EADA,EACAA,QAAS5B,EADT,EACSA,UAAWwB,EADpB,EACoBA,KAAMC,EAD1B,EAC0BA,SAEtC1B,EAAO+C,SAAWlB,GAAWH,EAC/B,EAAKW,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,WAAY,EACZyB,QAASmB,EAAU9C,cAEZF,EAAO+C,OAASlB,EAAUJ,EACnC,EAAKY,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,WAAY4C,EAAU5C,YACjBJ,EAAO+C,OAASlB,GAAW5B,EAChC4B,QAASmB,EAAUnB,SAAW7B,EAAO+C,OAASlB,OAGhD,EAAKQ,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,WAAY4C,EAAU5C,WAAa4C,EAAU/C,UAAY+C,EAAUvB,KACnEI,QAASmB,EAAUnB,QAAUmB,EAAUvB,U,EAK7CwB,UAAY,WAAO,IAAD,EAC0C,EAAKzB,MAAvDK,EADQ,EACRA,QAAS5B,EADD,EACCA,UAAWwB,EADZ,EACYA,KAAMvB,EADlB,EACkBA,UAAWwB,EAD7B,EAC6BA,SAEzCG,IAAY3B,GAAawB,EAC3B,EAAKW,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,YAAa4C,EAAUJ,YAAef,EAAU5B,EAChD4B,QAASmB,EAAUhD,OAAO+C,WAEnB,EAAKvB,MAAMK,QAAU3B,EAAYA,EAC1C,EAAKmC,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,WAAY4C,EAAU5C,YAAcyB,EAAU3B,GAAaD,EAC3D4B,QAASmB,EAAU9C,cAGrB,EAAKmC,UAAS,SAAAW,GAAS,MAAK,CAC1B5C,WAAY4C,EAAU5C,WAAaH,EAAYwB,EAC/CI,QAASmB,EAAUnB,QAAUmB,EAAUvB,U,uDAKnC,IAAD,EAOH3B,KAAK0B,MALPxB,EAFK,EAELA,OACAE,EAHK,EAGLA,UACAD,EAJK,EAILA,UACAE,EALK,EAKLA,kBACAC,EANK,EAMLA,WAGF,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAAUwB,MAAOjC,KAAK+C,kBACtB,6BACE,4CAEG,IACA7C,EAAO+C,OACP,IAJH,UAOA,kBAAC,EAAD,CACE/C,OAAQA,EACRE,UAAWA,EACXD,UAAWA,EACXE,kBAAmBA,EACnBC,WAAYA,EACZE,WAAYR,KAAKgD,UACjBzC,WAAYP,KAAKmD,kB,GA3GX5B,IAAMC,WCFxB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6b2eb761.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.css';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default class Carousel extends React.Component {\n  getImageId = element => element.match(/\\d/g).join('');\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      translateX,\n      prevButton,\n      nextButton,\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            {images.map(image => (\n              <li\n                key={this.getImageId(image)}\n                style={{\n                  transition: `transform ${animationDuration}ms ease`,\n                  transform: `translateX(${translateX}px)`,\n                }}\n              >\n                <img\n                  src={image}\n                  alt=\"1\"\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n          <div\n            className=\"buttonGroup\"\n            style={{\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            <Button\n              type=\"button\"\n              onClick={prevButton}\n              variant=\"warning\"\n            >\n              Prev\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={nextButton}\n              variant=\"danger\"\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  translateX: PropTypes.number.isRequired,\n  prevButton: PropTypes.func.isRequired,\n  nextButton: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Form.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default class MainForm extends React.Component {\n  state = {\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    step: 3,\n    infinite: false,\n  }\n\n  handleSubmit = (event) => {\n    const {\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n      infinite,\n    } = this.state;\n    const counter = +frameSize;\n\n    event.preventDefault();\n    this.props.param(\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n      infinite,\n      counter,\n    );\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n\n    // eslint-disable-next-line no-nested-ternary\n    this.setState({ [name]: type === 'checkbox'\n      ? checked : type === 'text' ? value : +value });\n  }\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n      infinite,\n    } = this.state;\n\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n        className=\"mainForm\"\n      >\n        <h2>Edit properties</h2>\n        <label htmlFor=\"frameSize\">FrameSize </label>\n        <input\n          id=\"frameSize\"\n          name=\"frameSize\"\n          type=\"number\"\n          placeholder=\"frameSize\"\n          value={frameSize}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"itemWidth\">itemWidth </label>\n        <input\n          id=\"itemWidth\"\n          name=\"itemWidth\"\n          type=\"number\"\n          placeholder=\"itemWidth\"\n          value={itemWidth}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"animationDuration\">animationDuration </label>\n        <input\n          id=\"animationDuration\"\n          name=\"animationDuration\"\n          type=\"number\"\n          placeholder=\"animationDuration\"\n          value={animationDuration}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"step\">step </label>\n        <input\n          id=\"step\"\n          name=\"step\"\n          type=\"number\"\n          placeholder=\"step\"\n          value={step}\n          onChange={this.handleChange}\n        />\n        <div className=\"infiniteInput\">\n          <label htmlFor=\"infinite\">infinite </label>\n          <input\n            id=\"infinite\"\n            name=\"infinite\"\n            type=\"checkbox\"\n            placeholder=\"infinite\"\n            value={infinite}\n            onChange={this.handleChange}\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Rebuild\n        </Button>\n      </Form>\n    );\n  }\n}\n\nMainForm.propTypes = {\n  param: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport Carousel from './components/Carousel';\nimport MainForm from './components/Form';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    imagesWidth: 1300,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    counter: 3,\n    translateX: 0,\n  };\n\n  paramFromInputs\n    = (frameSize, itemWidth, animationDuration, step, infinite, counter) => {\n      this.setState(() => ({\n        frameSize,\n        itemWidth,\n        animationDuration,\n        step,\n        infinite,\n        counter,\n        translateX: 0,\n      }));\n    }\n\n  nextSlide = () => {\n    const { images, counter, itemWidth, step, infinite } = this.state;\n\n    if (images.length === counter && infinite) {\n      this.setState(prevState => ({\n        translateX: 0,\n        counter: prevState.frameSize,\n      }));\n    } else if (images.length - counter < step) {\n      this.setState(prevState => ({\n        translateX: prevState.translateX\n          - (images.length - counter) * itemWidth,\n        counter: prevState.counter + (images.length - counter),\n      }));\n    } else {\n      this.setState(prevState => ({\n        translateX: prevState.translateX - prevState.itemWidth * prevState.step,\n        counter: prevState.counter + prevState.step,\n      }));\n    }\n  }\n\n  prevSlide = () => {\n    const { counter, itemWidth, step, frameSize, infinite } = this.state;\n\n    if (counter === frameSize && infinite) {\n      this.setState(prevState => ({\n        translateX: -prevState.imagesWidth + (counter * itemWidth),\n        counter: prevState.images.length,\n      }));\n    } else if (this.state.counter - frameSize < frameSize) {\n      this.setState(prevState => ({\n        translateX: prevState.translateX + (counter - frameSize) * itemWidth,\n        counter: prevState.frameSize,\n      }));\n    } else {\n      this.setState(prevState => ({\n        translateX: prevState.translateX + itemWidth * step,\n        counter: prevState.counter - prevState.step,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      translateX,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <MainForm param={this.paramFromInputs} />\n        <div>\n          <h2>\n            Carousel with\n            {' '}\n            {images.length}\n            {' '}\n            images\n          </h2>\n          <Carousel\n            images={images}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            translateX={translateX}\n            nextButton={this.nextSlide}\n            prevButton={this.prevSlide}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}